---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUkxSEZ5VFIvQTVqUDY2dndCMFFodWd3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak13TWpFd01EVTFPREkyV2hjTk1qUXdNakV3TURVMU9ESTJXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5nejNveUtxT2NXdW83aTVCS1Jad1N3MjliZnFJbjJKVk8wcU5Jdm45NC9mWUh2WDIzegpPU1VPU3FvbG5CSVJNaHJJTzMzTVZROXRjdHo0d20xV1pDOFdzbmNqYkU3K1JIVElaL1piaWFsbTZ2YW1yd3dLClB4UndXZmFNUDdQQWR2cG9pOXpqblROVDVUSlA4SkF3dUQ1VTJIaVUrZVdGSUJnMzJGYVZhTGlvRGhSTHkxTmQKM3pMWHN5SEJMazJTOVl2RlJONXkxTEdIek9VcTRJVjNmcWkyNXdoUGd2ZGRDUlE1ZDM2QjRUTmdtc2REZVByUwo3OXN1bFlNVTJmUjA1Um5VTkRodG5Bb2duNEVBT2VuRHV6SVJUenl4TVN6RXFoRFAyU0l5UUs4SS9Xejd0S2pwClA3eEFGbllhZlJ4UXA3eW8vTUxScGxEdUlDZjY4OFhBdmJzQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDZU54aDZ1VE1UaEdaWHFueDI5MFZNT1R5akxMUlh2cnF6SktZSU8zREYKUXFJVVJYWGYvSUtSVFh1eDdydFdIc0xtM0pibWgrNDZLVGhmUlcrcGl3clBpaEl4VVJHSkdLTStLWkxNTW5ROApaQjFFbHZnV3VsRko1N3ptYzlqelE3ZUxZaWw5QkUrbUs5Z2h6clpuWXIwK3k1UmhDSm0wTUVGN0c0WU9HRkNsCmZmMEMvZDcva2U1SEpMaUVEUG5rd0NmdzMrUW42d3dTaVBna1Nta3RaaU1lYlRrVUJGbWg3b0hFSW1DYUZ5NzAKV1JPOUFNYnYxUVFrZFRJM2VKUStTUjJ1ZmxsQ29rdTVzcXNlcjE5b0NZZlFmVWRvaXluNkJaOFpodWROTmJ3cwpLUjF3TUdDSGNNV09YVHBOdWRDVU1xM1ZHeG1TQmhjdlo4V21kWkVQbkdjeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMkRQZWpJcW81eGE2anVMa0VwRm5CTERiMXQrb2lmWWxVN1NvMGkrZjNqOTlnZTlmCmJmTTVKUTVLcWlXY0VoRXlHc2c3ZmN4VkQyMXkzUGpDYlZaa0x4YXlkeU5zVHY1RWRNaG45bHVKcVdicTlxYXYKREFvL0ZIQlo5b3cvczhCMittaUwzT09kTTFQbE1rL3drREM0UGxUWWVKVDU1WVVnR0RmWVZwVm91S2dPRkV2TApVMTNmTXRlekljRXVUWkwxaThWRTNuTFVzWWZNNVNyZ2hYZCtxTGJuQ0UrQzkxMEpGRGwzZm9IaE0yQ2F4ME40Cit0THYyeTZWZ3hUWjlIVGxHZFEwT0cyY0NpQ2ZnUUE1NmNPN01oRlBQTEV4TE1TcUVNL1pJakpBcndqOWJQdTAKcU9rL3ZFQVdkaHA5SEZDbnZLajh3dEdtVU80Z0ovcnp4Y0M5dXdJREFRQUJBb0lCQVFEWE5vTEJHY0hhRHZqMApCUTBOSXFvT3RGS1J5UitHL1h2WW9Bd3c5ZkZJbGFERXQ5Z2hwYXhybzVkVldZekxPMHpKOWltcUpyMUJWeXl3Cm8vcytSWElDb2JCVEFmTHRpeFB2d0JJazNLZmk5aXpNQzg1UnlOMVQ1aWJYVW5LUzV2SklmOHRCdlYyZFcxVGEKU1ZMbzVXWnh2Wm1pSm9HL0pFNTNiUmV2MEpobXZpYUFDUmlNZm9LdWljSXRZRFhqSU1lL0R1TjJVdkhmK0U3YQpXekRxU0w2M2dSOGNjdkk0K1NPaC9aL05jbWNUNG1xczZ0QnpnZnFBdTJVQ1RRODlGZmhoVXZNbjV5Q2pMU3ZQCjUrZ283Z2RSMXdNNDR3T21sQ2d2VEpiNHVHanRjQ2tPV2JtakpYRmIyb2NJTGgzRzVGL1FJUXhnS1pmNFI2NHoKclJtamtNT0JBb0dCQVBIVUZaRzRQam1TZ1liWjVMeWc3ZktsQ2Q4bWVwZ3FHSkFTUUhiYXR4YTNDd2RJbmdDVgprZlJQMmsra2t4THdmVjVOdUhlTmJ0NEdDZ1A1RHRPaDNJWkFrN0hkaWZRZ3FZMHZyNnkzUTVWaWp2ZzRrMkNVCjlJU2JvU252MURJNzJOOUt0RzlxRDJjV29OTWtUM3BjbkExMHNOa05vaEZZd082RzNkWDRML1o3QW9HQkFPVGYKV0g0TGQ4MXB3Zng4NkFMcjgwaHlIcEFGS2YxdzFhaWdLUmFaUVU5LzN4NzgvQW5CL1JLTXB0SENUd0laSlB5MQp1OUVSbG1xZ0k4UGNHZEhuT2NIZ25zajhpQ3FEczJmTUV6WjlaRzR3TE9rczdUNVRZbXFJWjF3ZkJ4WTVhNDhRCnF1dWxWSFZaV1VxMXQ1SVdIRjdGOW04MktVQnhsRmFkOVNESVlWSEJBb0dBS3FuSjdGMWV6UFZsMkk2VVpoclcKSDlxeDlTWnF0bkdteDdRUW4yZFNxYlU5UXRteTFsT00zbGRBSXBEY1Naa1g1UTA5SUFwWnB0M1Y0b0dMOWhZMgpPNUVrL1ZvaVBtbU13QlhMbm1MdWoycEY0dERJWDErb0M4VVJGNzd4NXJMY1BmaUdBS25yY2JweVFRM0UzOGQ2CjJIemZ2a3REYm1BRUdaQzlqa1FzNGdVQ2dZRUFoREZRYm5UM1BHalNSNkJwYlk2VTFRbzlCdGhFdVlMYmxXcjAKY0g0U1QvVytqS3A0ZExaY0VzTzBjc0UxV3pQa3ZpWEZsbXIvSXhUZHMzbkVYQTJldVpHZ2hOdi9WZmI5djMwSwp0OVZURmFXenV2WmREVHVpUTRBSG14aTh3aVJtTUpyaTdmcHZQdHhkaTU1THFoQWxVTVFzbzIxNEJDWFdGUFZsCktRc3owc0VDZ1lCK0ZkK3dyc2tmcS9iNlJ4dGdGbFpRbU9iWmVVRG03NUZJa0ZyUGdKdWZWd2J0S09RcmJrT3gKNnNBNUZtRFFEYS9GOUNHN2xmN2FDS3VMRjl0cjR6NS95L2RQeTdBWHg2SjdMRENQYlE3K0J0LzdEYStkZ2hDUwo3ZUtTalRsVDVUTC9WTG1rUWhGdCsva0xJbGhJejZpM291RWFVWW4xWWN0eEc0RDgrRHNENUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUkxSEZ5VFIvQTVqUDY2dndCMFFodWd3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak13TWpFd01EVTFPREkyV2hjTk1qUXdNakV3TURVMU9ESTJXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5nejNveUtxT2NXdW83aTVCS1Jad1N3MjliZnFJbjJKVk8wcU5Jdm45NC9mWUh2WDIzegpPU1VPU3FvbG5CSVJNaHJJTzMzTVZROXRjdHo0d20xV1pDOFdzbmNqYkU3K1JIVElaL1piaWFsbTZ2YW1yd3dLClB4UndXZmFNUDdQQWR2cG9pOXpqblROVDVUSlA4SkF3dUQ1VTJIaVUrZVdGSUJnMzJGYVZhTGlvRGhSTHkxTmQKM3pMWHN5SEJMazJTOVl2RlJONXkxTEdIek9VcTRJVjNmcWkyNXdoUGd2ZGRDUlE1ZDM2QjRUTmdtc2REZVByUwo3OXN1bFlNVTJmUjA1Um5VTkRodG5Bb2duNEVBT2VuRHV6SVJUenl4TVN6RXFoRFAyU0l5UUs4SS9Xejd0S2pwClA3eEFGbllhZlJ4UXA3eW8vTUxScGxEdUlDZjY4OFhBdmJzQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDZU54aDZ1VE1UaEdaWHFueDI5MFZNT1R5akxMUlh2cnF6SktZSU8zREYKUXFJVVJYWGYvSUtSVFh1eDdydFdIc0xtM0pibWgrNDZLVGhmUlcrcGl3clBpaEl4VVJHSkdLTStLWkxNTW5ROApaQjFFbHZnV3VsRko1N3ptYzlqelE3ZUxZaWw5QkUrbUs5Z2h6clpuWXIwK3k1UmhDSm0wTUVGN0c0WU9HRkNsCmZmMEMvZDcva2U1SEpMaUVEUG5rd0NmdzMrUW42d3dTaVBna1Nta3RaaU1lYlRrVUJGbWg3b0hFSW1DYUZ5NzAKV1JPOUFNYnYxUVFrZFRJM2VKUStTUjJ1ZmxsQ29rdTVzcXNlcjE5b0NZZlFmVWRvaXluNkJaOFpodWROTmJ3cwpLUjF3TUdDSGNNV09YVHBOdWRDVU1xM1ZHeG1TQmhjdlo4V21kWkVQbkdjeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQU9OVE1Fd2RhRW01dWZyZ2gzZzhERTh3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJek1ESXhNREExTlRneU5sb1hEVEkwTURJeE1EQTFOVGd5Tmxvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMDU4SjZxWndxb2lhdHJsWThQZkZ0ZUlLdHNrNjJKbS9YdGxuQ2lkNgpJMDVxN3dEemxwUlBWK05LYXBUTHVYak1vRUNjd0F5emFTN2dVa294WXIzcDExODJyaS9ZS2Q0TFo2TkhlSGY0ClhPZ3ptdHViK1NaTHJZY2ZmaEdSTkhNNVlxeE1yVVZpNi9aN2Z2U0FTdFF6VnplTGJ3NE9yRXo5ZVdHSktxdGMKWmhtU0xiWEJDdHoxeVo1SGw4OEJkbHdBWUh0ejEyakN1eW9PdjdWcUVpVXNsZHVMQ1Q1R21UL1dFTWZWSmpGQgpQeGZ5c2JwZnZDNXRYQktJWmlTbS9ITkJhU2luek1rVTdXWU93RUtKMTBvZnV1djVza0h2cFIvc2V0NDRxY3JWCld0Sy9VaGFWYWZ1ZE1lUlhwWjR4cTNncE4xVVBVeXdhZUJJWk5XT2tQNWZhS1FJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjYwK044QmVNUmN1ekpmam1wdXRMVEZhZWwKQzVpUlBLYmwvcDhmcWFDTHVmNE8vV0tBcm1Xdllrdkg2MUx6RzR0MTI4VmFhWE9PcEQybHBSY1dsZ3lKUHE0NQo1UXZsREc1a0huSW1vbzJuOGRabURuR05hK2ZYbEoyWHNMcm5jK1VJdUZvVnRma1RkMFY2aGRTYVZmUlhVVjd2CjVYcTl5eXg2TEcvb2x4RUNkNzh5aWxhalRwbExYMXphenF0cGlYS2V1d3YwTUlBRUVTa1ZJc2drMklXY0I1Z1MKWVd1MG44VVBKNWJZaHB6TFJGZUNWT1owYW5QZE0wVTlpTTNyRDNYWUJha3I0MEZBaStoR1VGMGNmeEtweDlNdQo2bFVMSFh6NEcrYklPbnpWMWFhQU9TQUZHbnVDb05yRTVBWmcxbzJhNW9nR3NXdDRkQldpYXMrMG1pWUsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMDU4SjZxWndxb2lhdHJsWThQZkZ0ZUlLdHNrNjJKbS9YdGxuQ2lkNkkwNXE3d0R6CmxwUlBWK05LYXBUTHVYak1vRUNjd0F5emFTN2dVa294WXIzcDExODJyaS9ZS2Q0TFo2TkhlSGY0WE9nem10dWIKK1NaTHJZY2ZmaEdSTkhNNVlxeE1yVVZpNi9aN2Z2U0FTdFF6VnplTGJ3NE9yRXo5ZVdHSktxdGNaaG1TTGJYQgpDdHoxeVo1SGw4OEJkbHdBWUh0ejEyakN1eW9PdjdWcUVpVXNsZHVMQ1Q1R21UL1dFTWZWSmpGQlB4ZnlzYnBmCnZDNXRYQktJWmlTbS9ITkJhU2luek1rVTdXWU93RUtKMTBvZnV1djVza0h2cFIvc2V0NDRxY3JWV3RLL1VoYVYKYWZ1ZE1lUlhwWjR4cTNncE4xVVBVeXdhZUJJWk5XT2tQNWZhS1FJREFRQUJBb0lCQUMzbWxoa09adXVtVzZCOApqVjBlOFFSbGRodDFoRTBNOUNSWGxYRHZaUitaVjdwbGczQksxUGJrTnZUdE4wOFFjNW5peWQwaUpCd1JiZGlMCmZUREVycDduYVEzWkZOTG45YU5TR0NONktpWEV1OFRBRTVHMEM4QWt5ZURuWUk1MjI2Q2FiTHM4akp0UHlET2UKUnVGMEszcWtjcHJ3K3AvR3gwZjNydS9SWVdaSGlxSFRJR3BXb1MraERjL01MbVFpRm44V3BUZERoZE03UU5Kbwp4U3pNeWpZcGphd1Y1eWFQeUJmOGdaWFd6NkUyR3BJYW42L0s5RnJxMldHakZRclNUMHl0TzZIbkZxa2ZMQUdDClVhNHppQ1pqVG0xSzZ6QTg2YXZZcnl4bDRQMnUyZnNBcEdPVmFIUk1UODByUFFtcmRDU1VRSzdwdG9ONHBaa1oKNHFtUitVMENnWUVBNWVYK3g4NUJFZ0I1MWZrSXpSdzVLaTlqMXUyclVaTXhFNXIvSzNPUjN6d2NzcVFkaXJJbwpYM2Vod3BPaFBXSDZrWjhQTkZuUWNqNGt6YjBRM0w0SFE3Y0sxUGxzSDhFTjVRRG1sSmhOdlFlVllKOUEzLzlYClZGeVFZT2JUMzhkSkF0eGxacEpzbkpjSytWTWRVSTBaWHNZTmx5R0xaR2V3UllkS1kxOG1GSGNDZ1lFQTY2WFIKSGxoZzFBOGZING1HQ05ZYU40dklveW55ZzJ2OTRPa0FPOUZZQkEzZ2o3ZDBqL08zbi9PUDFIaURvbVhZVVd0UworNElvNHlZbnRwVG1FaERvQ1NyM1hsSnd6OGhPZldmZGJCMXk4NUZLOHdtQjBWNkFaYTNaTzdYNnFZTjZDY3NyCm1pTHVOMDNQYUZnL1pQY1orekZTVXdVZXUwUHI0anhxalF3V1RsOENnWUFzNHlkSDQrR1luamNyckNBbnpDYnQKTWF1UXYzNy93bm1HbG5EVUR4Q2dRYUJvME5wanhqMVR4b3Z5N2RoQm4rdkltd0hnK3RoVU5nWUJsYlRCSk9sTwpNMk1PQ2xVdUxnZUVleFNLVnVKMjBoQThlVnUxWUttd2N4Sk5tVVF0SVVBRUt2d3hkczEyRlpleTdxTitvczRkClR4WkFOL0I3ZmpOUW9BWEtPVDI2S1FLQmdHVkRuWWpmeThSMU54ZXpYb0QvbU1hVDhFV0ZxaXlseExUWkMvdW8KcTUwYVpZejg5ajlDS1grNEIrL3pWZ1g4cENmZzZna2cxdmMrRjBUVDJjYWJzMHIxUnRZbXNVbnBOeW1XNzhVZApKcC9hcVEybDRUNmEwS3hoTi8vNzVOcmhvQmtEVVJwc3RsZlh2VENHODc4c25PS2dRRk5pMk9ENmdDeDVjQVJxCjFFOGJBb0dBTUxaSWlFL1Z2ZGZPMzlXMmV1WDBkSVZFSVVuTHhjTks2MitBMkJ6aU0xSVN6cUdsOGlMQXhVT1oKOU9HSkJkYnUrRlQ4MEFTcGFMaGdKM3NjU2R6cDRkTmdrai8vaUdwRkdMdHZYT3ZRa09xaWJGNjZyRDkzbExobAptMlhRRnRqZ0Rib0FHdUI0em1PQXQ2V2pyR1pLcWh2NlNzNmM2bzhBRnJOc0pyMHF4Nzg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQU9OVE1Fd2RhRW01dWZyZ2gzZzhERTh3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJek1ESXhNREExTlRneU5sb1hEVEkwTURJeE1EQTFOVGd5Tmxvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMDU4SjZxWndxb2lhdHJsWThQZkZ0ZUlLdHNrNjJKbS9YdGxuQ2lkNgpJMDVxN3dEemxwUlBWK05LYXBUTHVYak1vRUNjd0F5emFTN2dVa294WXIzcDExODJyaS9ZS2Q0TFo2TkhlSGY0ClhPZ3ptdHViK1NaTHJZY2ZmaEdSTkhNNVlxeE1yVVZpNi9aN2Z2U0FTdFF6VnplTGJ3NE9yRXo5ZVdHSktxdGMKWmhtU0xiWEJDdHoxeVo1SGw4OEJkbHdBWUh0ejEyakN1eW9PdjdWcUVpVXNsZHVMQ1Q1R21UL1dFTWZWSmpGQgpQeGZ5c2JwZnZDNXRYQktJWmlTbS9ITkJhU2luek1rVTdXWU93RUtKMTBvZnV1djVza0h2cFIvc2V0NDRxY3JWCld0Sy9VaGFWYWZ1ZE1lUlhwWjR4cTNncE4xVVBVeXdhZUJJWk5XT2tQNWZhS1FJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjYwK044QmVNUmN1ekpmam1wdXRMVEZhZWwKQzVpUlBLYmwvcDhmcWFDTHVmNE8vV0tBcm1Xdllrdkg2MUx6RzR0MTI4VmFhWE9PcEQybHBSY1dsZ3lKUHE0NQo1UXZsREc1a0huSW1vbzJuOGRabURuR05hK2ZYbEoyWHNMcm5jK1VJdUZvVnRma1RkMFY2aGRTYVZmUlhVVjd2CjVYcTl5eXg2TEcvb2x4RUNkNzh5aWxhalRwbExYMXphenF0cGlYS2V1d3YwTUlBRUVTa1ZJc2drMklXY0I1Z1MKWVd1MG44VVBKNWJZaHB6TFJGZUNWT1owYW5QZE0wVTlpTTNyRDNYWUJha3I0MEZBaStoR1VGMGNmeEtweDlNdQo2bFVMSFh6NEcrYklPbnpWMWFhQU9TQUZHbnVDb05yRTVBWmcxbzJhNW9nR3NXdDRkQldpYXMrMG1pWUsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRYlFUVWtOVUJzbTZWUXJhZUdTZUwvakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TURJeE1EQTFOVGd5TmxvWERUSTBNREl4TURBMU5UZ3lObG93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFLZitYMDlNTllWTzF4Z2lGaktBc0JsY0IvSU1oOUt3bHFhdTdrYmcxQWU3RWZKbwpVMEJYTzBqQmorMUhCOTZkRFFuS3RKcVRTV0dxK1BPcUZjSkRtYmV3OVlsQ2RUUHc0L1dIcE4yRUtKaU5VN0lWClVaUE11YkY5ZGFoUVRCd29ndCt3bnpzQm03T1NEWVNtQUVJdDgvMWVIQ3RkSXdEeXNoRWxQc3dwcnFlTzVvSHgKTDIxZzhXWTk5aVRqWng2NzlHb3R0NjlZNU9ZYWgxQlJlaTZqRm10U0phMUlCMHJVRVBoU052MTY2TjlobEprKwp1cExCMHBhaGpqTjFWZ2VwS2xGSmN1S08wWXRhN3V6TDdQNTFvR2JJcWNnZFZjTVlKSDA2ZWt3NUJMVDBTSHpVCmtDZEVuM3dqUEFNTW5qejVEdG5tL2FiU2VjVUllL0xJTXc5ZWczMENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSVNJaFM5T01Ub1hac3FjbHZqcHhJNCtIODl2dXFtMG1mRUgKZmQ0d0p2MXdTeStJU2hIWThRS3dPb3RveFJOTk9FWk5ZVnpET240Rm9oQVowNmFIZHM2ZEQzN2RydzhCUXhzUgpVaGs3c1hERG03V1lYakRwa1V1QmJsQjhrbmpQeXFyY0pxa0grWXNGUGtWd0Q2a2s0Qm9tVERWWU1ZU2thVW10CkFPdTBrQXVlcmNNU2VQazYzVG0zZEZJRjJtT2N3YzkyakIrN2QwQm9FZE1wR0NJemhXaXZTT3BZcU9HN1lPcDYKNmdOSmlKWVp4aXZhUlU0Mlh2bS9IbWs4WlVGS1N1eDg3Umh2aUZnQWQ0WWNtMEJ5a0F1empkenBSL1BKZEFTZwpweURlU2dic1Fja0xIa3MwVDZkYVlPVy9BZHliM1B0cG9zbVFxR21NWnFZc0VIVTNQUEk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcC81ZlQwdzFoVTdYR0NJV01vQ3dHVndIOGd5SDByQ1dwcTd1UnVEVUI3c1I4bWhUClFGYzdTTUdQN1VjSDNwME5DY3EwbXBOSllhcjQ4Nm9Wd2tPWnQ3RDFpVUoxTS9EajlZZWszWVFvbUkxVHNoVlIKazh5NXNYMTFxRkJNSENpQzM3Q2ZPd0diczVJTmhLWUFRaTN6L1Y0Y0sxMGpBUEt5RVNVK3pDbXVwNDdtZ2ZFdgpiV0R4WmozMkpPTm5IcnYwYWkyM3Ixams1aHFIVUZGNkxxTVdhMUlsclVnSFN0UVErRkkyL1hybzMyR1VtVDY2CmtzSFNscUdPTTNWV0I2a3FVVWx5NG83UmkxcnU3TXZzL25XZ1pzaXB5QjFWd3hna2ZUcDZURGtFdFBSSWZOU1EKSjBTZmZDTThBd3llUFBrTzJlYjlwdEo1eFFoNzhzZ3pEMTZEZlFJREFRQUJBb0lCQUZmelplUzNLbUlUaDZyNwoxWkUxTEh6cVlNS0phdWFVU3hzVEJHNlpNSWlubU5ySFlhYVN4TmZ2ZHJHcitXUEQ1MXFVQkgvVTBwdE9qcTNMCkF6OUVjd3JubTNUMEZUWlBUSmwwSFkxWHJvVkhvR1Rnb21mMXk5WXZyOVNoeldjRWtwZ1grUlZFWDBiaEZUQzQKVS9SUjZLWmlpZTd1QVBCekgyUzRraXNETzR3KysvbkV6UHNNaHpRa25qU3lNV3FDeXY3aEZwU2ROdkpkVWJiMwpDTEFtdjZ0bXdIbDN6bHg5QzZNK21Zbkkxa241Ym1UOTNvYXVXUm5Nd1BnU3R6ZUxyek10QWwrYll0dmFObFVWClMvNVRMVmRMSm4vMXFiYzZrQW9pYVpvY0Z5NGhFK05aRHlIS1duU21YQUdUeDg3cG9SZEN6SnFJTXFyUEVldXkKVlh4NFdRVUNnWUVBeHJzdmZuSE5KSGlxTlVwMktvR0RUM0RDaTJ0Wm44K21BY09BOWRFbEpHbVdBak1JWHhLSwpLVGJnOUNEY0Nqa0FldVVyL082NHNiMFhBdjhOc1k4bk1XWGtKVDFIMkdYS3NVSDRNeDJ0TWhpREZQWkNZY01wClZudnJFdGxSc2t4dDVhQVdqbWwzbHdRMXdxejYwTjBacUg3ZVVtZ3hwZ3ZMQmQzNFRMekNKUmNDZ1lFQTJHZWQKRHhPYklCOWFGMEkxWWJTdllLdDJ1aEUzem0rYlMvaGFxY0J3VE5wUWYwN1NsV2g0U0c5cmlrTWtRb2JHb1JGeQpuT1dtYXpMOG1NcnpmQ0k4S1A0cW5CU0tONXdkQkVucXNPUGlzSEFnZkdmdmRYV09WbHBKNUd0Z3FTQzFsZHNzCi90ajhXMzhNQmNWTldyaVkrVSsrOWdwVHN4TFFOWjViVlNNcW9Jc0NnWUJHUW5OK0hybktSU2JZQkdWV2pjZGcKMUpyVE03YlIrMVhUbGMwSUcxTW9WblFFZndwY29tOWFOdDY5TU1qYWpHQ1JFbWpFMlpsT3JXMXZUOEVGbjNqWgp6QTRtNUUxOFFqQ3hEb096ZnJCMjM1ZW9WNUFNaERVZk1GeGhvNWR3ay9qZWtBU3BnTHdaRmhIenE3aFpFM0k0CjBmSEQ3TFp3NEFaOUlvYmdpbk9STFFLQmdEN2haSmF6NkxoZHc4ek1WVHlOeHdQODdxUEVTd1gyRWhieUZFNE0KOTlTcy93VHUvMnVnam9ybHJVYmdtWkduSGVKQmNwODZiNi9vZ2ROWDdZWWRZSU84enQ3SmJSd1poYWp3WFh5Rwp5eURmZytFQ1JtZElBRk1CSzBWdkdnZ3EwL2kyVmcyN09TRFErc3BXZVZLcUh2RWFoZTl5TXIzdThvY1IrNUh5CmhQbGZBb0dBZUJMYnNTQmRYaVBmaythbHZDVTZZaFpNd0tKeFZGaXlONHY2SHRidUFLcFBEYmZnNHF0ZGlSVG8Kc3ZIajN1OHdpa3FHSnZadXYzTTRTR1Z2a0llZ0NQdHQ4MGRYRVRSbno1VFR3NU40VXFSK0plRlVaZ2xhM1lDWApKYkMzSFdTdmxpRzg0ZDhBaTZjbFRreHBVcldoK2ZZemFtK0ppNG90N05XYXRsaWhYZjQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRYlFUVWtOVUJzbTZWUXJhZUdTZUwvakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TURJeE1EQTFOVGd5TmxvWERUSTBNREl4TURBMU5UZ3lObG93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFLZitYMDlNTllWTzF4Z2lGaktBc0JsY0IvSU1oOUt3bHFhdTdrYmcxQWU3RWZKbwpVMEJYTzBqQmorMUhCOTZkRFFuS3RKcVRTV0dxK1BPcUZjSkRtYmV3OVlsQ2RUUHc0L1dIcE4yRUtKaU5VN0lWClVaUE11YkY5ZGFoUVRCd29ndCt3bnpzQm03T1NEWVNtQUVJdDgvMWVIQ3RkSXdEeXNoRWxQc3dwcnFlTzVvSHgKTDIxZzhXWTk5aVRqWng2NzlHb3R0NjlZNU9ZYWgxQlJlaTZqRm10U0phMUlCMHJVRVBoU052MTY2TjlobEprKwp1cExCMHBhaGpqTjFWZ2VwS2xGSmN1S08wWXRhN3V6TDdQNTFvR2JJcWNnZFZjTVlKSDA2ZWt3NUJMVDBTSHpVCmtDZEVuM3dqUEFNTW5qejVEdG5tL2FiU2VjVUllL0xJTXc5ZWczMENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSVNJaFM5T01Ub1hac3FjbHZqcHhJNCtIODl2dXFtMG1mRUgKZmQ0d0p2MXdTeStJU2hIWThRS3dPb3RveFJOTk9FWk5ZVnpET240Rm9oQVowNmFIZHM2ZEQzN2RydzhCUXhzUgpVaGs3c1hERG03V1lYakRwa1V1QmJsQjhrbmpQeXFyY0pxa0grWXNGUGtWd0Q2a2s0Qm9tVERWWU1ZU2thVW10CkFPdTBrQXVlcmNNU2VQazYzVG0zZEZJRjJtT2N3YzkyakIrN2QwQm9FZE1wR0NJemhXaXZTT3BZcU9HN1lPcDYKNmdOSmlKWVp4aXZhUlU0Mlh2bS9IbWs4WlVGS1N1eDg3Umh2aUZnQWQ0WWNtMEJ5a0F1empkenBSL1BKZEFTZwpweURlU2dic1Fja0xIa3MwVDZkYVlPVy9BZHliM1B0cG9zbVFxR21NWnFZc0VIVTNQUEk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  linkerd.yml: |-
    proxyInit:
      runAsRoot: true
  values: |
    cliVersion: linkerd/cli stable-2.12.4
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,192.169.129.0/24,192.169.161.0/24,192.169.243.0/24,192.169.142.0/24,192.169.178.0/24,192.169.241.0/24,192.169.251.0/24,192.169.219.0/24,192.169.0.0/24,192.169.231.0/24,192.169.236.0/24,192.169.33.0/24,192.169.33.0/24,192.169.201.0/24,192.169.129.0/24,192.169.164.0/24,192.169.111.0/24,192.169.133.0/24,192.169.0.0/24,192.169.72.0/24,192.169.59.0/24,192.169.208.0/24,192.169.126.0/24,192.169.120.0/24,192.169.141.0/24,192.169.203.0/24,192.169.232.0/24,192.169.14.0/24,192.169.113.0/24,192.169.50.0/24,192.169.134.0/24,192.169.186.0/24,192.169.11.0/24,192.169.31.0/24,192.169.137.0/24,192.169.148.0/24,192.169.211.0/24,192.169.226.0/24,192.169.192.0/24,192.169.54.0/24,192.169.35.0/24,192.169.48.0/24,192.169.124.0/24,192.169.19.0/24,192.169.97.0/24,192.169.189.0/24,192.169.122.0/24,192.169.0.0/24,192.169.66.0/24,192.169.97.0/24,192.169.27.0/24,192.169.132.0/24,192.169.30.0/24,192.169.80.0/24,192.169.48.0/24,192.169.88.0/24,192.169.253.0/24,192.169.113.0/24,192.169.177.0/24,192.169.144.0/24,192.169.222.0/24,192.169.110.0/24,192.169.183.0/24,192.169.28.0/24,192.169.54.0/24,192.169.129.0/24,192.169.77.0/24,192.169.139.0/24,192.169.36.0/24,192.169.62.0/24,192.169.54.0/24,192.169.37.0/24,192.169.118.0/24,192.169.220.0/24,192.169.69.0/24,192.169.82.0/24
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.4
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMzAyMTAwNTU4MTZaFw0yNDAyMTAwNTU4MzZaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEocs3oWjsLUM23ijUhRiCqA6WoXqDQQlO39fxUtdJ2QAYf0oa9lbJlMQC47dZ
            9qdM5h3e0btzaLcUKyFiYP9ugaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBTsUO8070BmzxDwb6AdmtfIAIJGkDAKBggqhkjOPQQDAgNIADBFAiBgGCUyeOLj
            k2CoiynM3Hqow2aIN+EQQ4fwQRZ5AfGmpwIhAOgYw7GiH1ujDAvi1VHHF3y99Gvl
            v0oRFlTSdxjCacLJ
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMzAyMTAwNTU4MTZaFw0yNDAyMTAwNTU4MzZaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEocs3oWjsLUM23ijUhRiCqA6WoXqDQQlO39fxUtdJ2QAYf0oa9lbJlMQC47dZ
      9qdM5h3e0btzaLcUKyFiYP9ugaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBTsUO8070BmzxDwb6AdmtfIAIJGkDAKBggqhkjOPQQDAgNIADBFAiBgGCUyeOLj
      k2CoiynM3Hqow2aIN+EQQ4fwQRZ5AfGmpwIhAOgYw7GiH1ujDAvi1VHHF3y99Gvl
      v0oRFlTSdxjCacLJ
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.4
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: true
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNekF5TVRBd05UVTRNVFphRncweU5EQXlNVEF3TlRVNE16WmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVvY3Mzb1dqc0xVTTIzaWpVaFJpQ3FBNldvWHFEUVFsTzM5ZnhVdGRKMlFBWWYwb2E5bGJKbE1RQzQ3ZFoKOXFkTTVoM2UwYnR6YUxjVUt5RmlZUDl1Z2FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCVHNVTzgwNzBCbXp4RHdiNkFkbXRmSUFJSkdrREFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUJnR0NVeWVPTGoKazJDb2l5bk0zSHFvdzJhSU4rRVFRNGZ3UVJaNUFmR21wd0loQU9nWXc3R2lIMXVqREF2aTFWSEhGM3k5OUd2bAp2MG9SRmxUU2R4akNhY0xKCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUt6by9FZElTa05FMkk1Q056YTRneDVoUWZoRmJNWWlCcWFleUNVdGMzR0JvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFb2NzM29XanNMVU0yM2lqVWhSaUNxQTZXb1hxRFFRbE8zOWZ4VXRkSjJRQVlmMG9hOWxiSgpsTVFDNDdkWjlxZE01aDNlMGJ0emFMY1VLeUZpWVA5dWdRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMzAyMTAwNTU4MTZaFw0yNDAyMTAwNTU4MzZaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEocs3oWjsLUM23ijUhRiCqA6WoXqDQQlO39fxUtdJ2QAYf0oa9lbJlMQC47dZ
    9qdM5h3e0btzaLcUKyFiYP9ugaNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBTsUO8070BmzxDwb6AdmtfIAIJGkDAKBggqhkjOPQQDAgNIADBFAiBgGCUyeOLj
    k2CoiynM3Hqow2aIN+EQQ4fwQRZ5AfGmpwIhAOgYw7GiH1ujDAvi1VHHF3y99Gvl
    v0oRFlTSdxjCacLJ
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.4
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.4
        linkerd.io/proxy-version: stable-2.12.4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 623daa5267791c84efd297d55dce6ea9bb1fe98afba04f1de0ef0a8eaed672d0
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux

      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        # - -proxyInit.runAsRoot=true
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.4
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.4
        linkerd.io/proxy-version: stable-2.12.4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 623daa5267791c84efd297d55dce6ea9bb1fe98afba04f1de0ef0a8eaed672d0
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux

      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        # - -proxyInit.runAsRoot=true
        image: cr.l5d.io/linkerd/controller:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.4
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  concurrencyPolicy: Replace
  schedule: "08 06 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.4
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.4
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.4
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.4
        linkerd.io/proxy-version: stable-2.12.4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 623daa5267791c84efd297d55dce6ea9bb1fe98afba04f1de0ef0a8eaed672d0
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux

      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaURDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNekF5TVRBd05UVTRNVFphRncweU5EQXlNVEF3TlRVNE16WmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFb2NzM29XanNMVU0yM2lqVWhSaUNxQTZXb1hxRFFRbE8zOWZ4VXRkSjJRQVlmMG9hOWxiSmxNUUM0N2RaCiAgICAgICAgOXFkTTVoM2UwYnR6YUxjVUt5RmlZUDl1Z2FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlRzVU84MDcwQm16eER3YjZBZG10ZklBSUpHa0RBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlCZ0dDVXllT0xqCiAgICAgICAgazJDb2l5bk0zSHFvdzJhSU4rRVFRNGZ3UVJaNUFmR21wd0loQU9nWXc3R2lIMXVqREF2aTFWSEhGM3k5OUd2bAogICAgICAgIHYwb1JGbFRTZHhqQ2FjTEoKICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUt6by9FZElTa05FMkk1Q056YTRneDVoUWZoRmJNWWlCcWFleUNVdGMzR0JvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVvY3Mzb1dqc0xVTTIzaWpVaFJpQ3FBNldvWHFEUVFsTzM5ZnhVdGRKMlFBWWYwb2E5bGJKCiAgICAgICAgbE1RQzQ3ZFo5cWRNNWgzZTBidHphTGNVS3lGaVlQOXVnUT09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU16QXlNVEF3TlRVNE1UWmFGdzB5TkRBeU1UQXdOVFU0TXpaYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVvY3Mzb1dqc0xVTTIzaWpVaFJpQ3FBNldvWHFEUVFsTzM5ZnhVdGRKMlFBWWYwb2E5bGJKbE1RQzQ3ZFoKICA5cWRNNWgzZTBidHphTGNVS3lGaVlQOXVnYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCVHNVTzgwNzBCbXp4RHdiNkFkbXRmSUFJSkdrREFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUJnR0NVeWVPTGoKICBrMkNvaXluTTNIcW93MmFJTitFUVE0ZndRUlo1QWZHbXB3SWhBT2dZdzdHaUgxdWpEQXZpMVZISEYzeTk5R3ZsCiAgdjBvUkZsVFNkeGpDYWNMSgogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd